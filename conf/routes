# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET 	/                           controllers.ApplicationController.index(request: Request)

# Remote logging API
#   user
GET         /api/v1/remote-logging/user                     controllers.remote.logging.UserController.getAll()
GET         /api/v1/remote-logging/user/$id<[\-0-9]+>       controllers.remote.logging.UserController.getById(id: Long)
GET         /api/v1/remote-logging/user/team/$teamId<[\-0-9]+>       controllers.remote.logging.UserController.getByTeamId(teamId: Long)
POST        /api/v1/remote-logging/user                       controllers.remote.logging.UserController.add(request: Request)
POST        /api/v1/remote-logging/user/signIn                       controllers.remote.logging.UserController.signIn(request: Request)
PATCH        /api/v1/remote-logging/user/team                       controllers.remote.logging.UserController.addUserToTeam(userId: Long, teamId: Long)
#   team
GET         /api/v1/remote-logging/team                      controllers.remote.logging.TeamController.getAll()
GET         /api/v1/remote-logging/team/$id<[\-0-9]+>          controllers.remote.logging.TeamController.getById(id: Long)
GET         /api/v1/remote-logging/team/manager/$managerId<[\-0-9]+>          controllers.remote.logging.TeamController.getByManagerId(managerId: Long)
POST        /api/v1/remote-logging/team                        controllers.remote.logging.TeamController.add(request: Request)
#   task
GET         /api/v1/remote-logging/task                          controllers.remote.logging.TaskController.getAll()
GET         /api/v1/remote-logging/task/$id<[\-0-9]+>          controllers.remote.logging.TaskController.getById(id: Long)
GET        /api/v1/remote-logging/task/user/$userId<[\-0-9]+>                controllers.remote.logging.TaskController.getByAssigneeId(userId: Long)
GET        /api/v1/remote-logging/task/project/$projectId<[\-0-9]+>         controllers.remote.logging.TaskController.getByProjectId(projectId: Long)
GET        /api/v1/remote-logging/task/category/$categoryId<[\-0-9]+>         controllers.remote.logging.TaskController.getByCategoryId(categoryId: Long)
POST        /api/v1/remote-logging/task                          controllers.remote.logging.TaskController.add(request: Request)
PATCH        /api/v1/remote-logging/task                          controllers.remote.logging.TaskController.update(request: Request)
PATCH        /api/v1/remote-logging/task/category                  controllers.remote.logging.TaskController.addCategoryToTask(taskId: Long, categoryId: Long)
PATCH        /api/v1/remote-logging/task/assign                  controllers.remote.logging.TaskController.assignTaskToUser(taskId: Long, userId: Long)
PATCH        /api/v1/remote-logging/task/startProgress                  controllers.remote.logging.TaskController.startProgress(taskId: Long, userId: Long)
PATCH        /api/v1/remote-logging/task/suspend                  controllers.remote.logging.TaskController.suspend(taskId: Long, userId: Long)
#   project
GET         /api/v1/remote-logging/project                          controllers.remote.logging.ProjectController.getAll()
GET         /api/v1/remote-logging/project/$id<[\-0-9]+>         controllers.remote.logging.ProjectController.getById(id: Long)
GET         /api/v1/remote-logging/project/manager/$managerId<[\-0-9]+>           controllers.remote.logging.ProjectController.getByManagerId(managerId: Long)
POST        /api/v1/remote-logging/project                    controllers.remote.logging.ProjectController.add(request: Request)
PATCH       /api/v1/remote-logging/project                      controllers.remote.logging.ProjectController.update(request: Request)
#   category
POST        /api/v1/remote-logging/category                 controllers.remote.logging.CategoryController.add(categoryName: String)
GET         /api/v1/remote-logging/category                 controllers.remote.logging.CategoryController.getAll()
GET         /api/v1/remote-logging/category/$id<[\-0-9]+>     controllers.remote.logging.CategoryController.getById(id: Long)
#log-work
GET         /api/v1/remote-logging/log-work                    controllers.remote.logging.LogWorkController.getAll()
POST         /api/v1/remote-logging/log-work                    controllers.remote.logging.LogWorkController.add(request: Request)
